import React, { useState } from 'react';
import { Component } from '../../types/types';
import ZeroBlockEditor from '../../ZeroBlock/ZeroBlockEditor';
import './PropertiesPanel.css';

interface PropertiesPanelProps {
    component: Component | null;
    onUpdateComponent: (component: Component) => void;
    onDeleteComponent?: (componentId: string) => void;
    onCopyComponent?: (component: Component) => void;
    onDuplicateComponent?: (component: Component) => void;
}

const PropertiesPanel: React.FC<PropertiesPanelProps> = ({
    component,
    onUpdateComponent,
    onDeleteComponent,
    onCopyComponent,
    onDuplicateComponent
}) => {
    const [showZeroBlockEditor, setShowZeroBlockEditor] = useState(false);

    if (!component) {
        return (
            <div className="properties-panel">
                <div className="properties-empty">
                    <div className="empty-icon">üéØ</div>
                    <h3>–í—ã–±–µ—Ä–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç</h3>
                    <p>–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –ª—é–±–æ–π —ç–ª–µ–º–µ–Ω—Ç –≤ —Ä–∞–±–æ—á–µ–π –æ–±–ª–∞—Å—Ç–∏ —á—Ç–æ–±—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞</p>
                </div>
            </div>
        );
    }

    const handleTextChange = (text: string) => {
        onUpdateComponent({
            ...component,
            props: {
                ...component.props,
                text: text
            }
        });
    };

    const handleStyleChange = (property: string, value: string) => {
        onUpdateComponent({
            ...component,
            styles: {
                ...component.styles,
                [property]: value
            }
        });
    };

    const handleDelete = () => {
        if (onDeleteComponent && component.id) {
            onDeleteComponent(component.id);
        }
    };

    const handleCopy = () => {
        if (onCopyComponent && component) {
            onCopyComponent(component);
        }
    };

    const handleDuplicate = () => {
        if (onDuplicateComponent && component) {
            onDuplicateComponent(component);
        }
    };

    const handleZeroBlockSave = (html: string, css: string, js: string) => {
        onUpdateComponent({
            ...component,
            props: {
                ...component.props,
                customHTML: html,
                customCSS: css,
                customJS: js
            }
        });
        setShowZeroBlockEditor(false);
    };
    // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è Section (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
    const renderSectionProperties = () => (
        <div className="property-section">
            <h4>üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ–∫—Ü–∏–∏</h4>
            <div className="property-group">
                <label>–¶–≤–µ—Ç —Ñ–æ–Ω–∞</label>
                <input
                    type="color"
                    value={component.styles.backgroundColor || '#f7fafc'}
                    onChange={(e) => handleStyleChange('backgroundColor', e.target.value)}
                    className="property-input"
                />
            </div>

            <div className="property-row">
                <div className="property-group">
                    <label>–í—ã—Å–æ—Ç–∞</label>
                    <select
                        value={component.styles.height || 'auto'}
                        onChange={(e) => handleStyleChange('height', e.target.value)}
                        className="property-input"
                    >
                        <option value="auto">–ê–≤—Ç–æ</option>
                        <option value="100px">100px</option>
                        <option value="150px">150px</option>
                        <option value="200px">200px</option>
                        <option value="300px">300px</option>
                        <option value="400px">400px</option>
                        <option value="500px">500px</option>
                    </select>
                </div>

                <div className="property-group">
                    <label>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ flex</label>
                    <select
                        value={component.styles.flexDirection || 'column'}
                        onChange={(e) => handleStyleChange('flexDirection', e.target.value)}
                        className="property-input"
                    >
                        <option value="column">‚¨áÔ∏è –ö–æ–ª–æ–Ω–∫–∞</option>
                        <option value="row">‚û°Ô∏è –†—è–¥</option>
                        <option value="column-reverse">‚¨ÜÔ∏è –ö–æ–ª–æ–Ω–∫–∞ (–æ–±—Ä–∞—Ç–Ω–æ)</option>
                        <option value="row-reverse">‚¨ÖÔ∏è –†—è–¥ (–æ–±—Ä–∞—Ç–Ω–æ)</option>
                    </select>
                </div>
            </div>

            <div className="property-group">
                <label>–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤</label>
                <select
                    value={component.styles.alignItems || 'stretch'}
                    onChange={(e) => handleStyleChange('alignItems', e.target.value)}
                    className="property-input"
                >
                    <option value="stretch">üìè –†–∞—Å—Ç—è–Ω—É—Ç—å</option>
                    <option value="flex-start">‚¨ÜÔ∏è –í –Ω–∞—á–∞–ª–µ</option>
                    <option value="center">‚è∫Ô∏è –ü–æ —Ü–µ–Ω—Ç—Ä—É</option>
                    <option value="flex-end">‚¨áÔ∏è –í –∫–æ–Ω—Ü–µ</option>
                </select>
            </div>
        </div>
    );

    // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è Grid (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
    const renderGridProperties = () => (
        <div className="property-section">
            <h4>üî≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Grid —Å–µ—Ç–∫–∏</h4>

            <div className="property-group">
                <label>–ö–æ–ª–æ–Ω–∫–∏ —Å–µ—Ç–∫–∏</label>
                <select
                    value={component.styles.gridTemplateColumns || 'repeat(2, 1fr)'}
                    onChange={(e) => handleStyleChange('gridTemplateColumns', e.target.value)}
                    className="property-input"
                >
                    <option value="1fr">1 –∫–æ–ª–æ–Ω–∫–∞</option>
                    <option value="repeat(2, 1fr)">2 –∫–æ–ª–æ–Ω–∫–∏</option>
                    <option value="repeat(3, 1fr)">3 –∫–æ–ª–æ–Ω–∫–∏</option>
                    <option value="repeat(4, 1fr)">4 –∫–æ–ª–æ–Ω–∫–∏</option>
                    <option value="repeat(auto-fit, minmax(200px, 1fr))">–ê–≤—Ç–æ-–ø–æ–¥–±–æ—Ä</option>
                </select>
            </div>

            <div className="property-row">
                <div className="property-group">
                    <label>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏</label>
                    <select
                        value={component.styles.gridGap || '10px'}
                        onChange={(e) => handleStyleChange('gridGap', e.target.value)}
                        className="property-input"
                    >
                        <option value="5px">5px - –ú–∞–ª–µ–Ω—å–∫–æ–µ</option>
                        <option value="10px">10px - –°—Ä–µ–¥–Ω–µ–µ</option>
                        <option value="15px">15px - –ë–æ–ª—å—à–æ–µ</option>
                        <option value="20px">20px - –û—á–µ–Ω—å –±–æ–ª—å—à–æ–µ</option>
                    </select>
                </div>

                <div className="property-group">
                    <label>–í—ã—Å–æ—Ç–∞</label>
                    <select
                        value={component.styles.height || 'auto'}
                        onChange={(e) => handleStyleChange('height', e.target.value)}
                        className="property-input"
                    >
                        <option value="auto">–ê–≤—Ç–æ</option>
                        <option value="150px">150px</option>
                        <option value="200px">200px</option>
                        <option value="250px">250px</option>
                        <option value="300px">300px</option>
                    </select>
                </div>
            </div>

            <div className="property-group">
                <label>–¶–≤–µ—Ç —Ñ–æ–Ω–∞</label>
                <input
                    type="color"
                    value={component.styles.backgroundColor || '#fff5f5'}
                    onChange={(e) => handleStyleChange('backgroundColor', e.target.value)}
                    className="property-input"
                />
            </div>
        </div>
    );

    // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è Flex (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
    const renderFlexProperties = () => (
        <div className="property-section">
            <h4>üìè –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Flex –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞</h4>

            <div className="property-row">
                <div className="property-group">
                    <label>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</label>
                    <select
                        value={component.styles.flexDirection || 'row'}
                        onChange={(e) => handleStyleChange('flexDirection', e.target.value)}
                        className="property-input"
                    >
                        <option value="row">‚û°Ô∏è –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ (row)</option>
                        <option value="column">‚¨áÔ∏è –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ (column)</option>
                        <option value="row-reverse">‚¨ÖÔ∏è –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ (–æ–±—Ä–∞—Ç–Ω–æ)</option>
                        <option value="column-reverse">‚¨ÜÔ∏è –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ (–æ–±—Ä–∞—Ç–Ω–æ)</option>
                    </select>
                </div>

                <div className="property-group">
                    <label>–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ –≥–ª–∞–≤–Ω–æ–π –æ—Å–∏</label>
                    <select
                        value={component.styles.justifyContent || 'center'}
                        onChange={(e) => handleStyleChange('justifyContent', e.target.value)}
                        className="property-input"
                    >
                        <option value="flex-start">‚¨ÖÔ∏è –í –Ω–∞—á–∞–ª–µ</option>
                        <option value="center">‚è∫Ô∏è –ü–æ —Ü–µ–Ω—Ç—Ä—É</option>
                        <option value="flex-end">‚û°Ô∏è –í –∫–æ–Ω—Ü–µ</option>
                        <option value="space-between">‚ÜîÔ∏è –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ</option>
                        <option value="space-around">‚è∫Ô∏è‚ÜîÔ∏è –° –æ—Ç—Å—Ç—É–ø–∞–º–∏</option>
                    </select>
                </div>
            </div>

            <div className="property-row">
                <div className="property-group">
                    <label>–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ –ø–æ–ø–µ—Ä–µ—á–Ω–æ–π –æ—Å–∏</label>
                    <select
                        value={component.styles.alignItems || 'center'}
                        onChange={(e) => handleStyleChange('alignItems', e.target.value)}
                        className="property-input"
                    >
                        <option value="stretch">üìè –†–∞—Å—Ç—è–Ω—É—Ç—å</option>
                        <option value="flex-start">‚¨ÜÔ∏è –í –Ω–∞—á–∞–ª–µ</option>
                        <option value="center">‚è∫Ô∏è –ü–æ —Ü–µ–Ω—Ç—Ä—É</option>
                        <option value="flex-end">‚¨áÔ∏è –í –∫–æ–Ω—Ü–µ</option>
                    </select>
                </div>

                <div className="property-group">
                    <label>–ü–µ—Ä–µ–Ω–æ—Å —ç–ª–µ–º–µ–Ω—Ç–æ–≤</label>
                    <select
                        value={component.styles.flexWrap || 'nowrap'}
                        onChange={(e) => handleStyleChange('flexWrap', e.target.value)}
                        className="property-input"
                    >
                        <option value="nowrap">üö´ –ë–µ–∑ –ø–µ—Ä–µ–Ω–æ—Å–∞</option>
                        <option value="wrap">‚Ü©Ô∏è –° –ø–µ—Ä–µ–Ω–æ—Å–æ–º</option>
                        <option value="wrap-reverse">üîÑ –û–±—Ä–∞—Ç–Ω—ã–π –ø–µ—Ä–µ–Ω–æ—Å</option>
                    </select>
                </div>
            </div>

            <div className="property-group">
                <label>–í—ã—Å–æ—Ç–∞</label>
                <select
                    value={component.styles.height || 'auto'}
                    onChange={(e) => handleStyleChange('height', e.target.value)}
                    className="property-input"
                >
                    <option value="auto">–ê–≤—Ç–æ</option>
                    <option value="100px">100px</option>
                    <option value="150px">150px</option>
                    <option value="200px">200px</option>
                </select>
            </div>

            <div className="property-group">
                <label>–¶–≤–µ—Ç —Ñ–æ–Ω–∞</label>
                <input
                    type="color"
                    value={component.styles.backgroundColor || '#f0fff4'}
                    onChange={(e) => handleStyleChange('backgroundColor', e.target.value)}
                    className="property-input"
                />
            </div>
        </div>
    );

    const getComponentIcon = (type: string) => {
        switch (type) {
            case 'text': return 'üìù';
            case 'button': return 'üîò';
            case 'image': return 'üñºÔ∏è';
            case 'header': return 'üîù';
            case 'footer': return 'üîª';
            case 'card': return 'üé¥';
            case 'form': return 'üìã';
            case 'input': return 'üìù';
            case 'zeroblock': return 'üéõÔ∏è';
            default: return '‚öôÔ∏è';
        }
    };

    // –û–±—â–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const renderCommonProperties = () => (
        <div className="property-section">
            <h4>üìê –†–∞–∑–º–µ—Ä –∏ –æ—Ç—Å—Ç—É–ø—ã</h4>

            <div className="property-row">
                <div className="property-group">
                    <label>–®–∏—Ä–∏–Ω–∞</label>
                    <select
                        value={component.styles.width || 'auto'}
                        onChange={(e) => handleStyleChange('width', e.target.value)}
                        className="property-input"
                    >
                        <option value="auto">–ê–≤—Ç–æ</option>
                        <option value="100%">–ü–æ–ª–Ω–∞—è —à–∏—Ä–∏–Ω–∞</option>
                        <option value="50%">50% —à–∏—Ä–∏–Ω—ã</option>
                        <option value="300px">–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è (300px)</option>
                    </select>
                </div>

                <div className="property-group">
                    <label>–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ</label>
                    <select
                        value={component.styles.textAlign || 'left'}
                        onChange={(e) => handleStyleChange('textAlign', e.target.value)}
                        className="property-input"
                    >
                        <option value="left">‚¨ÖÔ∏è –°–ª–µ–≤–∞</option>
                        <option value="center">‚è∫Ô∏è –ü–æ —Ü–µ–Ω—Ç—Ä—É</option>
                        <option value="right">‚û°Ô∏è –°–ø—Ä–∞–≤–∞</option>
                    </select>
                </div>
            </div>

            <div className="property-row">
                <div className="property-group">
                    <label>–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã</label>
                    <input
                        type="text"
                        value={component.styles.padding || '10px'}
                        onChange={(e) => handleStyleChange('padding', e.target.value)}
                        className="property-input"
                        placeholder="10px"
                    />
                </div>

                <div className="property-group">
                    <label>–í–Ω–µ—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã</label>
                    <input
                        type="text"
                        value={component.styles.margin || '0px'}
                        onChange={(e) => handleStyleChange('margin', e.target.value)}
                        className="property-input"
                        placeholder="0px"
                    />
                </div>
            </div>
        </div>
    );

    // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞
    const renderTextProperties = () => (
        <div className="property-section">
            <h4>üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ</h4>
            <div className="property-group">
                <label>–¢–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–∞</label>
                <textarea
                    value={component.props.text || ''}
                    onChange={(e) => handleTextChange(e.target.value)}
                    className="property-input"
                    rows={4}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç..."
                />
            </div>

            <div className="property-row">
                <div className="property-group">
                    <label>–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞</label>
                    <select
                        value={component.styles.fontSize || '16px'}
                        onChange={(e) => handleStyleChange('fontSize', e.target.value)}
                        className="property-input"
                    >
                        <option value="12px">12px - –ú–µ–ª–∫–∏–π</option>
                        <option value="14px">14px - –û–±—ã—á–Ω—ã–π</option>
                        <option value="16px">16px - –°—Ä–µ–¥–Ω–∏–π</option>
                        <option value="18px">18px - –ö—Ä—É–ø–Ω—ã–π</option>
                        <option value="24px">24px - –ó–∞–≥–æ–ª–æ–≤–æ–∫</option>
                        <option value="32px">32px - –ë–æ–ª—å—à–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫</option>
                    </select>
                </div>

                <div className="property-group">
                    <label>–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞</label>
                    <input
                        type="color"
                        value={component.styles.color || '#000000'}
                        onChange={(e) => handleStyleChange('color', e.target.value)}
                        className="property-input"
                    />
                </div>
            </div>

            <div className="property-group">
                <label>–¶–≤–µ—Ç —Ñ–æ–Ω–∞</label>
                <input
                    type="color"
                    value={component.styles.backgroundColor || '#ffffff'}
                    onChange={(e) => handleStyleChange('backgroundColor', e.target.value)}
                    className="property-input"
                />
            </div>
        </div>
    );

    // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏
    const renderButtonProperties = () => (
        <div className="property-section">
            <h4>üîò –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–Ω–æ–ø–∫–∏</h4>
            <div className="property-group">
                <label>–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏</label>
                <input
                    type="text"
                    value={component.props.text || ''}
                    onChange={(e) => handleTextChange(e.target.value)}
                    className="property-input"
                    placeholder="–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏..."
                />
            </div>

            <div className="property-row">
                <div className="property-group">
                    <label>–¶–≤–µ—Ç —Ñ–æ–Ω–∞</label>
                    <input
                        type="color"
                        value={component.styles.backgroundColor || '#4299e1'}
                        onChange={(e) => handleStyleChange('backgroundColor', e.target.value)}
                        className="property-input"
                    />
                </div>

                <div className="property-group">
                    <label>–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞</label>
                    <input
                        type="color"
                        value={component.styles.color || '#ffffff'}
                        onChange={(e) => handleStyleChange('color', e.target.value)}
                        className="property-input"
                    />
                </div>
            </div>

            <div className="property-group">
                <label>–°–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤</label>
                <select
                    value={component.styles.borderRadius || '4px'}
                    onChange={(e) => handleStyleChange('borderRadius', e.target.value)}
                    className="property-input"
                >
                    <option value="0px">–ë–µ–∑ —Å–∫—Ä—É–≥–ª–µ–Ω–∏—è</option>
                    <option value="4px">–ú–∞–ª–µ–Ω—å–∫–æ–µ</option>
                    <option value="8px">–°—Ä–µ–¥–Ω–µ–µ</option>
                    <option value="20px">–ë–æ–ª—å—à–æ–µ</option>
                    <option value="50%">–ö—Ä—É–≥–ª–∞—è</option>
                </select>
            </div>
        </div>
    );

    // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const renderImageProperties = () => (
        <div className="property-section">
            <h4>üñºÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</h4>
            <div className="property-group">
                <label>–ü–æ–¥–ø–∏—Å—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</label>
                <input
                    type="text"
                    value={component.props.text || ''}
                    onChange={(e) => handleTextChange(e.target.value)}
                    className="property-input"
                    placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è..."
                />
            </div>

            <div className="property-row">
                <div className="property-group">
                    <label>–í—ã—Å–æ—Ç–∞ –±–ª–æ–∫–∞</label>
                    <select
                        value={component.styles.height || '200px'}
                        onChange={(e) => handleStyleChange('height', e.target.value)}
                        className="property-input"
                    >
                        <option value="150px">150px</option>
                        <option value="200px">200px</option>
                        <option value="250px">250px</option>
                        <option value="300px">300px</option>
                        <option value="auto">–ê–≤—Ç–æ</option>
                    </select>
                </div>

                <div className="property-group">
                    <label>–¶–≤–µ—Ç —Ñ–æ–Ω–∞</label>
                    <input
                        type="color"
                        value={component.styles.backgroundColor || '#f7fafc'}
                        onChange={(e) => handleStyleChange('backgroundColor', e.target.value)}
                        className="property-input"
                    />
                </div>
            </div>
        </div>
    );

    // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è header
    const renderHeaderProperties = () => (
        <div className="property-section">
            <h4>üîù –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —à–∞–ø–∫–∏</h4>
            <div className="property-group">
                <label>–¢–µ–∫—Å—Ç –ª–æ–≥–æ—Ç–∏–ø–∞</label>
                <input
                    type="text"
                    value={component.props.text || ''}
                    onChange={(e) => handleTextChange(e.target.value)}
                    className="property-input"
                    placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞..."
                />
            </div>

            <div className="property-group">
                <label>–¶–≤–µ—Ç —Ñ–æ–Ω–∞</label>
                <input
                    type="color"
                    value={component.styles.backgroundColor || '#2d3748'}
                    onChange={(e) => handleStyleChange('backgroundColor', e.target.value)}
                    className="property-input"
                />
            </div>

            <div className="property-group">
                <label>–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞</label>
                <input
                    type="color"
                    value={component.styles.color || '#ffffff'}
                    onChange={(e) => handleStyleChange('color', e.target.value)}
                    className="property-input"
                />
            </div>
        </div>
    );

    // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è footer
    const renderFooterProperties = () => (
        <div className="property-section">
            <h4>üîª –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–≤–∞–ª–∞</h4>
            <div className="property-group">
                <label>–¢–µ–∫—Å—Ç –∫–æ–ø–∏—Ä–∞–π—Ç–∞</label>
                <input
                    type="text"
                    value={component.props.text || ''}
                    onChange={(e) => handleTextChange(e.target.value)}
                    className="property-input"
                    placeholder="–¢–µ–∫—Å—Ç –∫–æ–ø–∏—Ä–∞–π—Ç–∞..."
                />
            </div>

            <div className="property-group">
                <label>–¶–≤–µ—Ç —Ñ–æ–Ω–∞</label>
                <input
                    type="color"
                    value={component.styles.backgroundColor || '#4a5568'}
                    onChange={(e) => handleStyleChange('backgroundColor', e.target.value)}
                    className="property-input"
                />
            </div>

            <div className="property-group">
                <label>–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞</label>
                <input
                    type="color"
                    value={component.styles.color || '#ffffff'}
                    onChange={(e) => handleStyleChange('color', e.target.value)}
                    className="property-input"
                />
            </div>
        </div>
    );

    // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è card
    const renderCardProperties = () => (
        <div className="property-section">
            <h4>üé¥ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Ä—Ç–æ—á–∫–∏</h4>
            <div className="property-group">
                <label>–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç–æ—á–∫–∏</label>
                <input
                    type="text"
                    value={component.props.text || ''}
                    onChange={(e) => handleTextChange(e.target.value)}
                    className="property-input"
                    placeholder="–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç–æ—á–∫–∏..."
                />
            </div>

            <div className="property-group">
                <label>–¶–≤–µ—Ç —Ñ–æ–Ω–∞</label>
                <input
                    type="color"
                    value={component.styles.backgroundColor || '#ffffff'}
                    onChange={(e) => handleStyleChange('backgroundColor', e.target.value)}
                    className="property-input"
                />
            </div>

            <div className="property-group">
                <label>–°–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤</label>
                <select
                    value={component.styles.borderRadius || '8px'}
                    onChange={(e) => handleStyleChange('borderRadius', e.target.value)}
                    className="property-input"
                >
                    <option value="0px">–ë–µ–∑ —Å–∫—Ä—É–≥–ª–µ–Ω–∏—è</option>
                    <option value="4px">–ú–∞–ª–µ–Ω—å–∫–æ–µ</option>
                    <option value="8px">–°—Ä–µ–¥–Ω–µ–µ</option>
                    <option value="16px">–ë–æ–ª—å—à–æ–µ</option>
                </select>
            </div>
        </div>
    );

    // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è form
    const renderFormProperties = () => (
        <div className="property-section">
            <h4>üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ—Ä–º—ã</h4>
            <div className="property-group">
                <label>–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ñ–æ—Ä–º—ã</label>
                <input
                    type="text"
                    value={component.props.text || ''}
                    onChange={(e) => handleTextChange(e.target.value)}
                    className="property-input"
                    placeholder="–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ñ–æ—Ä–º—ã..."
                />
            </div>

            <div className="property-group">
                <label>–¶–≤–µ—Ç —Ñ–æ–Ω–∞</label>
                <input
                    type="color"
                    value={component.styles.backgroundColor || '#ffffff'}
                    onChange={(e) => handleStyleChange('backgroundColor', e.target.value)}
                    className="property-input"
                />
            </div>

            <div className="property-group">
                <label>–°–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤</label>
                <select
                    value={component.styles.borderRadius || '8px'}
                    onChange={(e) => handleStyleChange('borderRadius', e.target.value)}
                    className="property-input"
                >
                    <option value="0px">–ë–µ–∑ —Å–∫—Ä—É–≥–ª–µ–Ω–∏—è</option>
                    <option value="4px">–ú–∞–ª–µ–Ω—å–∫–æ–µ</option>
                    <option value="8px">–°—Ä–µ–¥–Ω–µ–µ</option>
                    <option value="16px">–ë–æ–ª—å—à–æ–µ</option>
                </select>
            </div>
        </div>
    );

    // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è input
    const renderInputProperties = () => (
        <div className="property-section">
            <h4>üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—è –≤–≤–æ–¥–∞</h4>
            <div className="property-group">
                <label>–ü–æ–¥—Å–∫–∞–∑–∫–∞ (placeholder)</label>
                <input
                    type="text"
                    value={component.props.placeholder || ''}
                    onChange={(e) => handleTextChange(e.target.value)}
                    className="property-input"
                    placeholder="–¢–µ–∫—Å—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏..."
                />
            </div>

            <div className="property-group">
                <label>–¶–≤–µ—Ç —Ñ–æ–Ω–∞</label>
                <input
                    type="color"
                    value={component.styles.backgroundColor || '#ffffff'}
                    onChange={(e) => handleStyleChange('backgroundColor', e.target.value)}
                    className="property-input"
                />
            </div>
        </div>
    );

    // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è ZeroBlock
    const renderZeroBlockProperties = () => (
        <div className="property-section">
            <h4>üéõÔ∏è ZeroBlock –†–µ–¥–∞–∫—Ç–æ—Ä</h4>

            <div className="property-group">
                <label>–ö–∞—Å—Ç–æ–º–Ω—ã–π HTML/CSS/JS –±–ª–æ–∫</label>
                <button
                    onClick={() => setShowZeroBlockEditor(true)}
                    className="property-input"
                    style={{
                        background: 'var(--primary-gradient)',
                        color: 'white',
                        border: 'none',
                        cursor: 'pointer',
                        padding: '12px',
                        fontWeight: '500'
                    }}
                >
                    {component.props.customHTML ? '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥' : 'üéõÔ∏è –û—Ç–∫—Ä—ã—Ç—å —Ä–µ–¥–∞–∫—Ç–æ—Ä'}
                </button>
            </div>

            {component.props.customHTML && (
                <div className="property-group">
                    <label>–°—Ç–∞—Ç—É—Å –±–ª–æ–∫–∞</label>
                    <div style={{
                        padding: '8px 12px',
                        background: '#48bb78',
                        color: 'white',
                        borderRadius: '6px',
                        fontSize: '12px',
                        textAlign: 'center',
                        fontWeight: '500'
                    }}>
                        ‚úÖ –ë–ª–æ–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–π –∫–æ–¥
                    </div>
                </div>
            )}

            {showZeroBlockEditor && (
                <ZeroBlockEditor
                    initialHTML={component.props.customHTML || ''}
                    initialCSS={component.props.customCSS || ''}
                    initialJS={component.props.customJS || ''}
                    onSave={handleZeroBlockSave}
                    onClose={() => setShowZeroBlockEditor(false)}
                />
            )}
        </div>
    );

    return (
        <div className="properties-panel">
            <div className="properties-header">
                <div className="component-title">
                    <span className="component-icon">{getComponentIcon(component.type)}</span>
                    <div>
                        <h3>{getComponentTypeName(component.type)}</h3>
                        <span className="component-id">ID: {component.id.slice(0, 8)}</span>
                    </div>
                </div>
                <div className="component-actions">
                    <button
                        className="component-action-btn"
                        onClick={handleCopy}
                        title="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å (Ctrl+C)"
                    >
                        üìã
                    </button>
                    <button
                        className="component-action-btn"
                        onClick={handleDuplicate}
                        title="–î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å (Ctrl+D)"
                    >
                        üé≠
                    </button>
                    {onDeleteComponent && (
                        <button
                            className="component-action-btn delete"
                            onClick={handleDelete}
                            title="–£–¥–∞–ª–∏—Ç—å"
                        >
                            üóëÔ∏è
                        </button>
                    )}
                </div>
            </div>

            {renderCommonProperties()}

            {component.type === 'text' && renderTextProperties()}
            {component.type === 'button' && renderButtonProperties()}
            {component.type === 'image' && renderImageProperties()}
            {component.type === 'header' && renderHeaderProperties()}
            {component.type === 'footer' && renderFooterProperties()}
            {component.type === 'card' && renderCardProperties()}
            {component.type === 'form' && renderFormProperties()}
            {component.type === 'input' && renderInputProperties()}
            {component.type === 'zeroblock' && renderZeroBlockProperties()}
            {component.type === 'section' && renderSectionProperties()}
            {component.type === 'grid' && renderGridProperties()}
            {component.type === 'flex' && renderFlexProperties()}
        </div>
    );
};

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
const getComponentTypeName = (type: string) => {
    switch (type) {
        case 'text': return '–¢–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫';
        case 'button': return '–ö–Ω–æ–ø–∫–∞';
        case 'image': return '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ';
        case 'header': return '–®–∞–ø–∫–∞ —Å–∞–π—Ç–∞';
        case 'footer': return '–ü–æ–¥–≤–∞–ª —Å–∞–π—Ç–∞';
        case 'card': return '–ö–∞—Ä—Ç–æ—á–∫–∞';
        case 'form': return '–§–æ—Ä–º–∞';
        case 'input': return '–ü–æ–ª–µ –≤–≤–æ–¥–∞';
        case 'zeroblock': return 'ZeroBlock';
        case 'section': return '–°–µ–∫—Ü–∏—è';
        case 'grid': return 'Grid —Å–µ—Ç–∫–∞';
        case 'flex': return 'Flex –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä';
        default: return '–≠–ª–µ–º–µ–Ω—Ç';
    }
};

export default PropertiesPanel;